//===----------------------------------------------------------------------===//
//
// This source file is part of the AWSSDKSwift open source project
//
// Copyright (c) 2017-2020 the AWSSDKSwift project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of AWSSDKSwift project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

@_exported import AWSSDKSwiftCore

/**
Client object for interacting with AWS Macie2 service.

Amazon Macie is a fully managed data security and data privacy service that uses machine learning and pattern matching to discover and protect your sensitive data in AWS. Macie automates the discovery of sensitive data, such as PII and intellectual property, to provide you with insight into the data that your organization stores in AWS. Macie also provides an inventory of your Amazon S3 buckets, which it continually monitors for you. If Macie detects sensitive data or potential data access issues, it generates detailed findings for you to review and act upon as necessary.
*/
public struct Macie2: AWSService {

    //MARK: Member variables

    public let client: AWSClient
    public let config: AWSServiceConfig
    public let context: AWSServiceContext

    //MARK: Initialization

    /// Initialize the Macie2 client
    /// - parameters:
    ///     - client: AWSClient used to process requests
    ///     - region: Region of server you want to communicate with. This will override the partition parameter.
    ///     - partition: AWS partition where service resides, standard (.aws), china (.awscn), government (.awsusgov).
    ///     - endpoint: Custom endpoint URL to use instead of standard AWS servers
    ///     - timeout: Timeout value for HTTP requests
    public init(
        client: AWSClient,
        region: AWSSDKSwiftCore.Region? = nil,
        partition: AWSPartition = .aws,
        endpoint: String? = nil,
        timeout: TimeAmount? = nil
    ) {
        self.client = client
        self.config = AWSServiceConfig(
            region: region,
            partition: region?.partition ?? partition,
            service: "macie2",
            serviceProtocol: .restjson,
            apiVersion: "2020-01-01",
            endpoint: endpoint,
            possibleErrorTypes: [Macie2ErrorType.self]        )
        self.context = .init(timeout: timeout ?? .seconds(20))
    }
    
    /// create copy of service with new context
    public func withNewContext(_ process: (AWSServiceContext) -> AWSServiceContext) -> Self {
        return Self(client: self.client, config: self.config, context: process(self.context))
    }
    
    //MARK: API Calls

    ///  Accepts an Amazon Macie membership invitation that was received from a specific account.
    public func acceptInvitation(_ input: AcceptInvitationRequest) -> EventLoopFuture<AcceptInvitationResponse> {
        return client.execute(operation: "AcceptInvitation", path: "/invitations/accept", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves information about one or more custom data identifiers.
    public func batchGetCustomDataIdentifiers(_ input: BatchGetCustomDataIdentifiersRequest) -> EventLoopFuture<BatchGetCustomDataIdentifiersResponse> {
        return client.execute(operation: "BatchGetCustomDataIdentifiers", path: "/custom-data-identifiers/get", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///   Creates and defines the settings for a classification job.
    public func createClassificationJob(_ input: CreateClassificationJobRequest) -> EventLoopFuture<CreateClassificationJobResponse> {
        return client.execute(operation: "CreateClassificationJob", path: "/jobs", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Creates and defines the criteria and other settings for a custom data identifier.
    public func createCustomDataIdentifier(_ input: CreateCustomDataIdentifierRequest) -> EventLoopFuture<CreateCustomDataIdentifierResponse> {
        return client.execute(operation: "CreateCustomDataIdentifier", path: "/custom-data-identifiers", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Creates and defines the criteria and other settings for a findings filter.
    public func createFindingsFilter(_ input: CreateFindingsFilterRequest) -> EventLoopFuture<CreateFindingsFilterResponse> {
        return client.execute(operation: "CreateFindingsFilter", path: "/findingsfilters", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///   Sends an Amazon Macie membership invitation to one or more accounts.
    public func createInvitations(_ input: CreateInvitationsRequest) -> EventLoopFuture<CreateInvitationsResponse> {
        return client.execute(operation: "CreateInvitations", path: "/invitations", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///   Associates an account with an Amazon Macie master account.
    public func createMember(_ input: CreateMemberRequest) -> EventLoopFuture<CreateMemberResponse> {
        return client.execute(operation: "CreateMember", path: "/members", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///   Creates sample findings.
    public func createSampleFindings(_ input: CreateSampleFindingsRequest) -> EventLoopFuture<CreateSampleFindingsResponse> {
        return client.execute(operation: "CreateSampleFindings", path: "/findings/sample", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Declines Amazon Macie membership invitations that were received from specific accounts.
    public func declineInvitations(_ input: DeclineInvitationsRequest) -> EventLoopFuture<DeclineInvitationsResponse> {
        return client.execute(operation: "DeclineInvitations", path: "/invitations/decline", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Deletes a custom data identifier.
    public func deleteCustomDataIdentifier(_ input: DeleteCustomDataIdentifierRequest) -> EventLoopFuture<DeleteCustomDataIdentifierResponse> {
        return client.execute(operation: "DeleteCustomDataIdentifier", path: "/custom-data-identifiers/{id}", httpMethod: .DELETE, input: input, config: self.config, context: self.context)
    }

    ///  Deletes a findings filter.
    public func deleteFindingsFilter(_ input: DeleteFindingsFilterRequest) -> EventLoopFuture<DeleteFindingsFilterResponse> {
        return client.execute(operation: "DeleteFindingsFilter", path: "/findingsfilters/{id}", httpMethod: .DELETE, input: input, config: self.config, context: self.context)
    }

    ///  Deletes Amazon Macie membership invitations that were received from specific accounts.
    public func deleteInvitations(_ input: DeleteInvitationsRequest) -> EventLoopFuture<DeleteInvitationsResponse> {
        return client.execute(operation: "DeleteInvitations", path: "/invitations/delete", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Deletes the association between an Amazon Macie master account and an account.
    public func deleteMember(_ input: DeleteMemberRequest) -> EventLoopFuture<DeleteMemberResponse> {
        return client.execute(operation: "DeleteMember", path: "/members/{id}", httpMethod: .DELETE, input: input, config: self.config, context: self.context)
    }

    ///   Retrieves (queries) statistical data and other information about one or more S3 buckets that Amazon Macie monitors and analyzes.
    public func describeBuckets(_ input: DescribeBucketsRequest) -> EventLoopFuture<DescribeBucketsResponse> {
        return client.execute(operation: "DescribeBuckets", path: "/datasources/s3", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves information about the status and settings for a classification job.
    public func describeClassificationJob(_ input: DescribeClassificationJobRequest) -> EventLoopFuture<DescribeClassificationJobResponse> {
        return client.execute(operation: "DescribeClassificationJob", path: "/jobs/{jobId}", httpMethod: .GET, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves information about the Amazon Macie configuration settings for an AWS organization.
    public func describeOrganizationConfiguration(_ input: DescribeOrganizationConfigurationRequest) -> EventLoopFuture<DescribeOrganizationConfigurationResponse> {
        return client.execute(operation: "DescribeOrganizationConfiguration", path: "/admin/configuration", httpMethod: .GET, input: input, config: self.config, context: self.context)
    }

    ///  Disables an Amazon Macie account and deletes Macie resources for the account.
    public func disableMacie(_ input: DisableMacieRequest) -> EventLoopFuture<DisableMacieResponse> {
        return client.execute(operation: "DisableMacie", path: "/macie", httpMethod: .DELETE, input: input, config: self.config, context: self.context)
    }

    ///  Disables an account as a delegated administrator of Amazon Macie for an AWS organization.
    public func disableOrganizationAdminAccount(_ input: DisableOrganizationAdminAccountRequest) -> EventLoopFuture<DisableOrganizationAdminAccountResponse> {
        return client.execute(operation: "DisableOrganizationAdminAccount", path: "/admin", httpMethod: .DELETE, input: input, config: self.config, context: self.context)
    }

    ///  Disassociates a member account from its Amazon Macie master account.
    public func disassociateFromMasterAccount(_ input: DisassociateFromMasterAccountRequest) -> EventLoopFuture<DisassociateFromMasterAccountResponse> {
        return client.execute(operation: "DisassociateFromMasterAccount", path: "/master/disassociate", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Disassociates an Amazon Macie master account from a member account.
    public func disassociateMember(_ input: DisassociateMemberRequest) -> EventLoopFuture<DisassociateMemberResponse> {
        return client.execute(operation: "DisassociateMember", path: "/members/disassociate/{id}", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Enables Amazon Macie and specifies the configuration settings for a Macie account.
    public func enableMacie(_ input: EnableMacieRequest) -> EventLoopFuture<EnableMacieResponse> {
        return client.execute(operation: "EnableMacie", path: "/macie", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Enables an account as a delegated administrator of Amazon Macie for an AWS organization.
    public func enableOrganizationAdminAccount(_ input: EnableOrganizationAdminAccountRequest) -> EventLoopFuture<EnableOrganizationAdminAccountResponse> {
        return client.execute(operation: "EnableOrganizationAdminAccount", path: "/admin", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///   Retrieves (queries) aggregated statistical data for all the S3 buckets that Amazon Macie monitors and analyzes.
    public func getBucketStatistics(_ input: GetBucketStatisticsRequest) -> EventLoopFuture<GetBucketStatisticsResponse> {
        return client.execute(operation: "GetBucketStatistics", path: "/datasources/s3/statistics", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves the configuration settings for storing data classification results.
    public func getClassificationExportConfiguration(_ input: GetClassificationExportConfigurationRequest) -> EventLoopFuture<GetClassificationExportConfigurationResponse> {
        return client.execute(operation: "GetClassificationExportConfiguration", path: "/classification-export-configuration", httpMethod: .GET, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves information about the criteria and other settings for a custom data identifier.
    public func getCustomDataIdentifier(_ input: GetCustomDataIdentifierRequest) -> EventLoopFuture<GetCustomDataIdentifierResponse> {
        return client.execute(operation: "GetCustomDataIdentifier", path: "/custom-data-identifiers/{id}", httpMethod: .GET, input: input, config: self.config, context: self.context)
    }

    ///   Retrieves (queries) aggregated statistical data about findings.
    public func getFindingStatistics(_ input: GetFindingStatisticsRequest) -> EventLoopFuture<GetFindingStatisticsResponse> {
        return client.execute(operation: "GetFindingStatistics", path: "/findings/statistics", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves information about one or more findings.
    public func getFindings(_ input: GetFindingsRequest) -> EventLoopFuture<GetFindingsResponse> {
        return client.execute(operation: "GetFindings", path: "/findings/describe", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves information about the criteria and other settings for a findings filter.
    public func getFindingsFilter(_ input: GetFindingsFilterRequest) -> EventLoopFuture<GetFindingsFilterResponse> {
        return client.execute(operation: "GetFindingsFilter", path: "/findingsfilters/{id}", httpMethod: .GET, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves the count of Amazon Macie membership invitations that were received by an account.
    public func getInvitationsCount(_ input: GetInvitationsCountRequest) -> EventLoopFuture<GetInvitationsCountResponse> {
        return client.execute(operation: "GetInvitationsCount", path: "/invitations/count", httpMethod: .GET, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves information about the current status and configuration settings for an Amazon Macie account.
    public func getMacieSession(_ input: GetMacieSessionRequest) -> EventLoopFuture<GetMacieSessionResponse> {
        return client.execute(operation: "GetMacieSession", path: "/macie", httpMethod: .GET, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves information about the Amazon Macie master account for an account.
    public func getMasterAccount(_ input: GetMasterAccountRequest) -> EventLoopFuture<GetMasterAccountResponse> {
        return client.execute(operation: "GetMasterAccount", path: "/master", httpMethod: .GET, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves information about a member account that's associated with an Amazon Macie master account.
    public func getMember(_ input: GetMemberRequest) -> EventLoopFuture<GetMemberResponse> {
        return client.execute(operation: "GetMember", path: "/members/{id}", httpMethod: .GET, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves (queries) quotas and aggregated usage data for one or more accounts.
    public func getUsageStatistics(_ input: GetUsageStatisticsRequest) -> EventLoopFuture<GetUsageStatisticsResponse> {
        return client.execute(operation: "GetUsageStatistics", path: "/usage/statistics", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves (queries) aggregated usage data for an account.
    public func getUsageTotals(_ input: GetUsageTotalsRequest) -> EventLoopFuture<GetUsageTotalsResponse> {
        return client.execute(operation: "GetUsageTotals", path: "/usage", httpMethod: .GET, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves information about the status and settings for one or more classification jobs.
    public func listClassificationJobs(_ input: ListClassificationJobsRequest) -> EventLoopFuture<ListClassificationJobsResponse> {
        return client.execute(operation: "ListClassificationJobs", path: "/jobs/list", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves a subset of information about all the custom data identifiers for an account.
    public func listCustomDataIdentifiers(_ input: ListCustomDataIdentifiersRequest) -> EventLoopFuture<ListCustomDataIdentifiersResponse> {
        return client.execute(operation: "ListCustomDataIdentifiers", path: "/custom-data-identifiers/list", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///   Retrieves a subset of information about one or more findings.
    public func listFindings(_ input: ListFindingsRequest) -> EventLoopFuture<ListFindingsResponse> {
        return client.execute(operation: "ListFindings", path: "/findings", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves a subset of information about all the findings filters for an account.
    public func listFindingsFilters(_ input: ListFindingsFiltersRequest) -> EventLoopFuture<ListFindingsFiltersResponse> {
        return client.execute(operation: "ListFindingsFilters", path: "/findingsfilters", httpMethod: .GET, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves information about all the Amazon Macie membership invitations that were received by an account.
    public func listInvitations(_ input: ListInvitationsRequest) -> EventLoopFuture<ListInvitationsResponse> {
        return client.execute(operation: "ListInvitations", path: "/invitations", httpMethod: .GET, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves information about the accounts that are associated with an Amazon Macie master account.
    public func listMembers(_ input: ListMembersRequest) -> EventLoopFuture<ListMembersResponse> {
        return client.execute(operation: "ListMembers", path: "/members", httpMethod: .GET, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves information about the account that's designated as the delegated administrator of Amazon Macie for an AWS organization.
    public func listOrganizationAdminAccounts(_ input: ListOrganizationAdminAccountsRequest) -> EventLoopFuture<ListOrganizationAdminAccountsResponse> {
        return client.execute(operation: "ListOrganizationAdminAccounts", path: "/admin", httpMethod: .GET, input: input, config: self.config, context: self.context)
    }

    ///  Retrieves the tags (keys and values) that are associated with a classification job, custom data identifier, findings filter, or member account.
    public func listTagsForResource(_ input: ListTagsForResourceRequest) -> EventLoopFuture<ListTagsForResourceResponse> {
        return client.execute(operation: "ListTagsForResource", path: "/tags/{resourceArn}", httpMethod: .GET, input: input, config: self.config, context: self.context)
    }

    ///  Creates or updates the configuration settings for storing data classification results.
    public func putClassificationExportConfiguration(_ input: PutClassificationExportConfigurationRequest) -> EventLoopFuture<PutClassificationExportConfigurationResponse> {
        return client.execute(operation: "PutClassificationExportConfiguration", path: "/classification-export-configuration", httpMethod: .PUT, input: input, config: self.config, context: self.context)
    }

    ///  Adds or updates one or more tags (keys and values) that are associated with a classification job, custom data identifier, findings filter, or member account.
    public func tagResource(_ input: TagResourceRequest) -> EventLoopFuture<TagResourceResponse> {
        return client.execute(operation: "TagResource", path: "/tags/{resourceArn}", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Tests a custom data identifier.
    public func testCustomDataIdentifier(_ input: TestCustomDataIdentifierRequest) -> EventLoopFuture<TestCustomDataIdentifierResponse> {
        return client.execute(operation: "TestCustomDataIdentifier", path: "/custom-data-identifiers/test", httpMethod: .POST, input: input, config: self.config, context: self.context)
    }

    ///  Removes one or more tags (keys and values) from a classification job, custom data identifier, findings filter, or member account.
    public func untagResource(_ input: UntagResourceRequest) -> EventLoopFuture<UntagResourceResponse> {
        return client.execute(operation: "UntagResource", path: "/tags/{resourceArn}", httpMethod: .DELETE, input: input, config: self.config, context: self.context)
    }

    ///  Cancels a classification job.
    public func updateClassificationJob(_ input: UpdateClassificationJobRequest) -> EventLoopFuture<UpdateClassificationJobResponse> {
        return client.execute(operation: "UpdateClassificationJob", path: "/jobs/{jobId}", httpMethod: .PATCH, input: input, config: self.config, context: self.context)
    }

    ///  Updates the criteria and other settings for a findings filter.
    public func updateFindingsFilter(_ input: UpdateFindingsFilterRequest) -> EventLoopFuture<UpdateFindingsFilterResponse> {
        return client.execute(operation: "UpdateFindingsFilter", path: "/findingsfilters/{id}", httpMethod: .PATCH, input: input, config: self.config, context: self.context)
    }

    ///  Suspends or re-enables an Amazon Macie account, or updates the configuration settings for a Macie account.
    public func updateMacieSession(_ input: UpdateMacieSessionRequest) -> EventLoopFuture<UpdateMacieSessionResponse> {
        return client.execute(operation: "UpdateMacieSession", path: "/macie", httpMethod: .PATCH, input: input, config: self.config, context: self.context)
    }

    ///   Enables an Amazon Macie master account to suspend or re-enable a member account.
    public func updateMemberSession(_ input: UpdateMemberSessionRequest) -> EventLoopFuture<UpdateMemberSessionResponse> {
        return client.execute(operation: "UpdateMemberSession", path: "/macie/members/{id}", httpMethod: .PATCH, input: input, config: self.config, context: self.context)
    }

    ///  Updates Amazon Macie configuration settings for an AWS organization.
    public func updateOrganizationConfiguration(_ input: UpdateOrganizationConfigurationRequest) -> EventLoopFuture<UpdateOrganizationConfigurationResponse> {
        return client.execute(operation: "UpdateOrganizationConfiguration", path: "/admin/configuration", httpMethod: .PATCH, input: input, config: self.config, context: self.context)
    }
}

extension Macie2 {
    /// internal initialiser used by `withNewContext`
    init(client: AWSClient, config: AWSServiceConfig, context: AWSServiceContext) {
        self.client = client
        self.config = config
        self.context = context
    }
}
